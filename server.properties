
#broker.id=0

#listeners=PLAINTEXT://192.168.150.158:9092

#advertised.listeners=PLAINTEXT://192.168.150.158:9092

num.network.threads=3

num.io.threads=8

num.partitions=3

num.recovery.threads.per.data.dir=1

socket.send.buffer.bytes=102400

socket.receive.buffer.bytes=102400

socket.request.max.bytes=104857600

delete.topic.enable=true

log.dirs=/var/kafka/log

log.retention.hours=24

log.roll.hours=24

log.segment.bytes=67108864

log.retention.check.interval.ms=10000

log.cleaner.enable=true

log.cleanup.policy=delete

log.flush.interval.messages=10000

log.flush.interval.ms=3000

replica.lag.time.max.ms:10000

replica.lag.max.messages:4000

num.replica.fetchers:3
#在Replica上会启动若干Fetch线程把对应的数据同步到本地，而num.replica.fetchers这个参数是用来控制Fetch线程的数量。
#每个Partition启动的多个Fetcher，通过共享offset既保证了同一时间内Consumer和Partition之间的一对一关系，又允许我们通过增多Fetch线程来提高效率。

default.replication.factor:2
#这个参数指新创建一个topic时，默认的Replica数量
#Replica过少会影响数据的可用性，太多则会白白浪费存储资源，一般建议在2~3为宜

#zookeeper.connect=192.168.150.158:2181

zookeeper.connection.timeout.ms=6000

compression.type=snappy


